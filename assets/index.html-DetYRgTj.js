import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as h,c as m,a as s,d as a,b as n,w as l,e as t}from"./app-BT-bWAve.js";const k={},b=s("h1",{id:"代理转发",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#代理转发"},[s("span",null,"代理转发")])],-1),v={href:"https://www.freebuf.com/articles/web/256415.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/Stick-of-WuKong/HackNotes/blob/main/Proxy%E4%BB%A3%E7%90%86/Proxy%E4%BB%A3%E7%90%86.md",target:"_blank",rel:"noopener noreferrer"},x=t('<p>当拿到一个主机的权限之后可以通过该主机向内网进行渗透, 不过由于该主机上不一定有渗透需要的工具以及若是直接远程连接到主机的话会留下明显的痕迹, 因此通过本地操作然后内网转发流量是比较稳妥的做法</p><hr><ul><li><a href="#%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91">代理转发</a><ul><li><a href="#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86">正向代理与反向代理</a><ul><li><a href="#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86forward-proxy">正向代理(Forward Proxy)</a></li><li><a href="#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86reverse-proxy">反向代理(Reverse Proxy)</a></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86%E5%8D%8F%E8%AE%AE">代理协议</a><ul><li><a href="#socks-%E5%8D%8F%E8%AE%AE">Socks 协议</a></li></ul></li><li><a href="#%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91">端口转发</a><ul><li><a href="#%E4%BD%BF%E7%94%A8-netsh-%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91">使用 netsh 设置端口转发</a></li><li><a href="#ssh%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91">SSH隧道(端口转发)</a></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">代理服务器</a><ul><li><a href="#clash">Clash</a></li><li><a href="#squid">squid</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li></ul></li><li><a href="#%E4%BD%BF%E7%94%A8-ssh-%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%BD%9C-socks-%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">使用 SSH 创建动态端口转发作 socks 代理服务器</a><ul><li><a href="#burpsuit-%E6%8C%82%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%9A%84-socks-%E4%BB%A3%E7%90%86%E6%8B%A6%E6%88%AA%E6%9C%AC%E5%9C%B0-http-%E6%B5%81%E9%87%8F%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E5%85%B6%E4%BB%96%E7%9A%84%E6%9C%8D%E5%8A%A1">BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务</a></li></ul></li><li><a href="#snail007goproxy">snail007/goproxy</a></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86%E5%AE%A2%E6%88%B7%E7%AB%AF">代理客户端</a><ul><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%BE%E7%BD%AEhttp%E4%BB%A3%E7%90%86">命令行设置HTTP代理</a></li><li><a href="#proxychains">Proxychains</a><ul><li><a href="#%E5%AE%89%E8%A3%85-1">安装</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li></ul></li><li><a href="#todolist">TODOLIST</a></li></ul></li></ul></li></ul><hr><h2 id="正向代理与反向代理" tabindex="-1"><a class="header-anchor" href="#正向代理与反向代理"><span>正向代理与反向代理</span></a></h2><ul><li>正向代理中，Proxy和Client同属一个区域，对Server是透明的；</li><li>反向代理中，Proxy和Server同属一个区域，对Client透明。</li></ul><p>正向代理与反相代理都是用于代替收发请求与响应, 从拓扑上来看大致如下:</p>',7),f=s("hr",null,null,-1),y=s("h3",{id:"正向代理-forward-proxy",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#正向代理-forward-proxy"},[s("span",null,"正向代理(Forward Proxy)")])],-1),_=s("p",null,"Client 为了访问到 Server, 想 Proxy 发送了一个请求并指定目标位 Server, 然后由 Proxy 转发请求并将获得的内容返回给 Client",-1),E=s("p",null,"正向代理，也称为普通代理，是客户端向代理服务器发送请求，代理服务器再将请求发送给目标服务器，然后将目标服务器返回的数据返回给客户端。正向代理的代理对象是客户端, 帮助客户端访问其无法访问的服务器资源",-1),S=s("p",null,"正向代理是代理服务器向服务器发送请求，代表客户端请求数据, 一般是由客户端架设的",-1),A=s("p",null,"正向代理中, 服务器不知道真正的客户端是谁",-1),B=s("hr",null,null,-1),q=s("h3",{id:"反向代理-reverse-proxy",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#反向代理-reverse-proxy"},[s("span",null,"反向代理(Reverse Proxy)")])],-1),w=s("p",null,"反向代理，是客户端向反向代理服务器发送请求，反向代理服务器根据请求的内容将请求转发到内部的服务器集群中的某一台服务器上，将处理结果返回给客户端。反向代理的代理对象是服务器, 帮助服务器做负载均衡, 安全防护等",-1),P=s("p",null,"反向代理是代理服务器接收客户端请求，向服务器发送请求，代表服务器提供服务, 一般是由服务端架设的",-1),D=s("p",null,"反向代理中, 客户端不知道真正的服务器是谁",-1),C=s("hr",null,null,-1),T=s("h2",{id:"代理协议",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#代理协议"},[s("span",null,"代理协议")])],-1),H={href:"https://www.freecodecamp.org/chinese/news/osi-model-networking-layers/",target:"_blank",rel:"noopener noreferrer"},N=t('<ul><li>HTTP(s)</li><li>Socks</li><li>FTP</li><li>SMTP</li><li>DNS</li><li>WebSocket</li></ul><p>上述协议除了 Socks 工作在会话层外, 其他协议都工作在应用层</p><hr><h3 id="socks-协议" tabindex="-1"><a class="header-anchor" href="#socks-协议"><span>Socks 协议</span></a></h3><p>代理是一种网络服务, 可以让客户端通过一个中间服务器来访问目标服务器, Socks 协议是一种代理协议, 可以支持任何类型的网络流量</p><p>Socks(Socket Secure)协议是一种网络协议，用于在客户端和服务器之间进行通信，常被代理服务器使用。Socks协议与HTTP代理不同，它不解析数据包，而是将其原封不动地发送给代理目标。因此，Socks协议可以更高效地处理网络流量，但也会带来一些安全风险。</p><p>Socks 工作在第五层(会话层), 使用 TCP 协议传输数据, 不提供如 ICMP 信息之类的网络层相关服务</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302271331853.jpeg" alt="img"></p><p>Socks 目前有 SOCKS4 和 SOCKS5 两个版本</p><ul><li>SOCKS4支持TELNET, FTP, HTTP等TCP协议；</li><li>SOCKS5支持TCP与UDP，并支持安全认证方案。</li></ul><blockquote><ul><li>认证方式：Socks4 不支持认证机制，而 Socks5 支持多种认证方式，包括用户名密码认证、GSS-API 认证等。</li><li>支持的协议：Socks4只支持TCP协议，而Socks5支持TCP和UDP协议。</li><li>DNS解析：Socks4代理不支持DNS解析，它只接受IP地址作为参数。而Socks5代理支持DNS解析，可以将域名解析为IP地址。</li><li>Socks5 支持 IPv6, Socks4只支持IPv4地址，而Socks5支持IPv4和IPv6地址。</li></ul></blockquote><p>常见的转发工具有</p><ul><li>reGeorg</li><li>SSH 端口转发</li><li>iptables</li><li>Netsh</li><li>LCX</li><li>EarthWorm(支持多种系统)</li><li>Socks(Linux)</li><li>Netcat</li></ul><p>常见的代理链工具:</p><ul><li>Proxychains(Linux)</li><li>Proxifier(Windows)</li><li>Sockscap64(Windows)</li></ul><hr><h2 id="端口转发" tabindex="-1"><a class="header-anchor" href="#端口转发"><span>端口转发</span></a></h2><hr><h3 id="使用-netsh-设置端口转发" tabindex="-1"><a class="header-anchor" href="#使用-netsh-设置端口转发"><span>使用 netsh 设置端口转发</span></a></h3><p><code>netsh(Network Shell)</code> 是 Windows 用于查看和修改本地计算机或远程计算机网络配置的命令行脚本工具, 被广泛应用于配置网络接口, 防火墙规则, IP地址, 路由规则等多种网络相关的设置</p><p>可以使用 netsh 来配置端口转发, 结合如下场景演示:</p>',21),F=t(`<div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface portproxy add v4tov4 listenport=<span class="token punctuation">[</span>本地端口<span class="token punctuation">]</span> listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 connectport=<span class="token punctuation">[</span>远程端口<span class="token punctuation">]</span> connectaddress=<span class="token punctuation">[</span>内网Linux设备的IP<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就可以在 Local Host 上直接 SSH 到 Transport Host 的 listenport 来连接 Remote Host 上的 SSH 服务了</p><hr><p>相应的, 要通过 RDP 本机的 listenport 转发到目标 Windows 的 3389 端口也可以远程登录目标机器, 例如:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface portproxy add v4tov4 listenport=9100 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 connectport=3389 connectaddress=192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>1<span class="token punctuation">.</span>21
<span class="token comment"># 删除上述规则:</span>
netsh interface portproxy delete v4tov4 listenport=9100 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0
<span class="token comment"># 查看所有转发规则</span>
netsh interface portproxy show all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以 RDP 到本机的 9100 端口来远程 192.168.1.21 了, 例如</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202312011346591.png" alt=""></p><hr><h3 id="ssh隧道-端口转发" tabindex="-1"><a class="header-anchor" href="#ssh隧道-端口转发"><span>SSH隧道(端口转发)</span></a></h3><p><strong>SSH 隧道是 SSH 中的一种机制</strong>，它能够将其他 TCP 端口的网络数据通过 SSH 连接来转发，并且自动提供了相应的加密及解密服务。因为 SSH 为其他 TCP 链接提供了一个安全的通道来进行传输，因此这一过程也被叫做“隧道”（tunneling）。</p>`,10),L=s("hr",null,null,-1),I=s("h2",{id:"代理服务器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#代理服务器"},[s("span",null,"代理服务器")])],-1),U=s("p",null,"这里主要讲的是正向代理服务器, 反代暂时每碰到需求, 有需求的话再加",-1),R=s("p",null,"除了下面提到的这些可以用于正向代理服务器外, 如下这些也可以, 不过这里就不展开讲了",-1),O={href:"https://cloud.tencent.com/developer/article/2399761",target:"_blank",rel:"noopener noreferrer"},K={href:"https://www.cnblogs.com/yanjieli/p/15229907.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.cnblogs.com/luojiahu/p/9425535.html",target:"_blank",rel:"noopener noreferrer"},W=t('<hr><h3 id="clash" tabindex="-1"><a class="header-anchor" href="#clash"><span>Clash</span></a></h3><blockquote><p>PS: Clash 既可以作为代理服务器也可以作为代理客户端使用</p></blockquote><hr><p>作为服务器使用可以让本地挂 Clash 指定端口上的 HTTP(S) OCKS 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405301329390.png" alt="image-20240530132925193"></p><p>要在局域网内其他机器使用这台机器上的 Clash 代理的话则需要打开 <code>Allow LAN</code></p><hr><h3 id="squid" tabindex="-1"><a class="header-anchor" href="#squid"><span>squid</span></a></h3>',9),J={href:"https://www.cnblogs.com/ssgeek/p/12302135.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://www.squid-cache.org/Doc/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://wiki.squid-cache.org/SquidFaq/BinaryPackages",target:"_blank",rel:"noopener noreferrer"},$=s("hr",null,null,-1),G={href:"https://www.yfname.com/help/detail/288",target:"_blank",rel:"noopener noreferrer"},Z=s("hr",null,null,-1),Y=s("h4",{id:"安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装"},[s("span",null,"安装")])],-1),j={href:"https://wiki.squid-cache.org/SquidFaq/BinaryPackages",target:"_blank",rel:"noopener noreferrer"},z=s("p",null,[s("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202408061426422.png",alt:"image-20240806142639206"})],-1),X=s("hr",null,null,-1),ss={href:"https://wiki.squid-cache.org/KnowledgeBase/Ubuntu",target:"_blank",rel:"noopener noreferrer"},as=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token function"},"aptitude"),a(),s("span",{class:"token function"},"install"),a(` squid
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),ns=s("blockquote",null,[s("p",null,[s("code",null,"aptitude"),a(" 是 "),s("code",null,"apt"),a(" 的一个前端，提供了一个交互式的界面和一些额外的功能，通常用于更复杂的包管理操作。")])],-1),es=s("p",null,[s("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202408061514581.png",alt:"image-20240806151400428"})],-1),ts=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token comment"},"# 验证下 squid 的状态"),a(`
systemctl status squid
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),ls=s("p",null,[s("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202408061515881.png",alt:"image-20240806151541768"})],-1),is=t(`<hr><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h4><p>备份与编辑 <code>/etc/squid/squid.conf</code> 以修改 squid 配置</p><p>如下图所示, squid 默认监听在所有网卡的 <code>3128</code> 端口上</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061518091.png" alt="image-20240806151806978"></p><hr><p>默认情况下只允许本地连接</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061522677.png" alt="image-20240806152235600"></p><p>可以在前面加一行</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">http_access</span> <span class="token value attr-value">allow all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来允许所有连接</p>`,11),os={href:"https://www.yfname.com/help/detail/288",target:"_blank",rel:"noopener noreferrer"},ps=t(`<hr><p>修改完配置后可以重启 squid 服务以加载配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 重启 squid 服务</span>
systemctl restart squid.service
<span class="token comment"># 设置开机自启动</span>
systemctl <span class="token builtin class-name">enable</span> squid.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以正常作为 HTTP 代理服务器使用了, 例如:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061532084.png" alt="image-20240806153247993"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061533117.png" alt="image-20240806153312004"></p><hr><h3 id="使用-ssh-创建动态端口转发作-socks-代理服务器" tabindex="-1"><a class="header-anchor" href="#使用-ssh-创建动态端口转发作-socks-代理服务器"><span>使用 SSH 创建动态端口转发作 socks 代理服务器</span></a></h3>`,8),rs={href:"https://blog.csdn.net/snleo/article/details/4792523",target:"_blank",rel:"noopener noreferrer"},cs=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fND</span> localhost:12345 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> root@192.168.1.96
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-f</code> 表示在后台运行 ssh 命令, 不占用终端</li><li><code>-N</code> 表示不执行远程命令,只做端口转发</li><li><code>-D localhost:12345</code> 表示创建一个动态端口转发, 将本地主机 <code>localhost</code> 的 12345 端口作为 socks 代理</li><li><code>-i [私钥路径]</code> 表示使用指定私钥文件进行身份验证</li><li><code>root@192.168.1.96</code> 表示以 root 用户登录远程主机 192.168.1.96</li></ul><p>这个命令可以使得通过 ssh 隧道访问远程主机上的网络服务, 或者使用远程主机作为代理访问其他网站</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354643.png" alt="image-20230330173345557"></p><p>挂上后命令行会卡在这里 然后 Firefox 配置 socks 5 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354163.png" alt="image-20230330180127369"></p><p>如此这般就可以从本地的 Firefox 挂 96 的代理访问内网其他的服务了</p><hr><h5 id="burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务" tabindex="-1"><a class="header-anchor" href="#burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务"><span>BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务</span></a></h5><p>首先还是 SSH 连接并转发端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fND</span> localhost:12345 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> root@192.168.1.96
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置 BurpSuit Socks 代理:</p><p><code>BurpSuit -&gt; Proxy Setting -&gt; Network-&gt;Connections-&gt;Socks proxy</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354182.png" alt="image-20230331113331780"></p><p>配置 BurpSuit http 代理监听:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354730.png" alt="image-20230331112806555"></p><p>配置 Firefox http 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354257.png" alt="image-20230331141034822"></p><hr><h3 id="snail007-goproxy" tabindex="-1"><a class="header-anchor" href="#snail007-goproxy"><span>snail007/goproxy</span></a></h3>`,20),ds={href:"https://github.com/snail007/goproxy/blob/master/README_ZH.md",target:"_blank",rel:"noopener noreferrer"},us=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># linux - 免费版 - 安装命令</span>
<span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-L</span> https://mirrors.goproxyauth.com/https://github.com/snail007/goproxy/blob/master/install_auto.sh<span class="token variable">)</span></span>&quot;</span> @ cn  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408051807836.png" alt="image-20240805180728693"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装管理面板</span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/blob/master/install_auto.sh <span class="token operator">|</span> <span class="token function">bash</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>stash: 上面的命令可能会失败, 多试几次, 或者可以尝试如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/blob/master/install_auto.sh<span class="token variable">)</span></span>&quot;</span> @ cn 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>上述脚本的实际内容如下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#!/bin/bash</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;cn&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">MIRROR</span><span class="token operator">=</span><span class="token string">&quot;https://mirrors.goproxyauth.com/&quot;</span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">F</span><span class="token operator">=</span><span class="token string">&quot;proxy-admin_linux-amd64.tar.gz&quot;</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> /tmp/proxy <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /tmp/proxy
<span class="token keyword">fi</span>
<span class="token function">mkdir</span> /tmp/proxy
<span class="token builtin class-name">cd</span> /tmp/proxy
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&gt;&gt;&gt; downloading ... <span class="token variable">$F</span><span class="token entity" title="\\n">\\n</span>&quot;</span>

<span class="token assign-left variable">manual</span><span class="token operator">=</span><span class="token string">&quot;https://snail.gitee.io/proxy/manual/zh/&quot;</span>
<span class="token assign-left variable">LAST_VERSION</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">--silent</span> <span class="token string">&quot;<span class="token variable">\${MIRROR}</span>https://api.github.com/repos/snail007/proxy_admin_free/releases/latest&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Po</span> <span class="token string">&#39;&quot;tag_name&quot;: *&quot;\\K.*?(?=&quot;)&#39;</span><span class="token variable">)</span></span>
<span class="token function">wget</span>  <span class="token parameter variable">-t</span> <span class="token number">1</span> <span class="token string">&quot;<span class="token variable">\${MIRROR}</span>https://github.com/snail007/proxy_admin_free/releases/download/<span class="token variable">\${LAST_VERSION}</span>/<span class="token variable">$F</span>&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; installing ... <span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token comment">#install proxy-admin</span>
<span class="token function">tar</span> zxvf <span class="token variable">$F</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$F</span>
<span class="token function">chmod</span> +x proxy-admin
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/bin/
<span class="token function">cp</span> <span class="token parameter variable">-f</span> proxy-admin /usr/local/bin/
<span class="token builtin class-name">set</span> +e
<span class="token builtin class-name">cd</span> /usr/local/bin/
./proxy-admin uninstall <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token function">cp</span> <span class="token parameter variable">-f</span> /tmp/proxy/proxy-admin /usr/local/bin/
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
./proxy-admin <span class="token function">install</span>
./proxy-admin start
<span class="token builtin class-name">set</span> +e
systemctl status proxyadmin <span class="token operator">&amp;</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
<span class="token function">sleep</span> <span class="token number">2</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&gt;&gt;&gt; install done, thanks for using snail007/proxy-admin<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; install path /usr/local/bin/proxy-admin<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; configuration path /etc/gpa<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; uninstall just exec : /usr/local/bin/proxy-admin uninstall &amp;&amp; rm /etc/gpa<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; please visit : http://YOUR_IP:32080/ username: root, password: 123<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span> <span class="token string">&quot;&gt;&gt;&gt; How to using? Please visit : <span class="token variable">$manual</span><span class="token entity" title="\\n">\\n</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>执行完命令后会自动拉起 <code>proxy-admin</code>(<code>line32</code>)</p><p>访问该主机的 <code>32080</code> 端口的 HTTP 服务即可看到登录页, 使用默认账密 <code>root/123</code> 登录并修改密码即可</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061012504.png" alt="image-20240806101237356"></p><p>然后在 <code>HTTP代理-&gt;HTTP代理管理</code> 处可以尝试新增 HTTP 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061039776.png" alt="image-20240806103919675"></p><p>如下框选的部分为基本配置, 按照自己的设定填写即可</p><blockquote><p>WS密码随便填就行, 用于底层传输, 对用户无感</p><p>如果还有上级代理的话也可以手动配置一下</p></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061040646.png" alt="image-20240806104002577"></p><p>之后便可以像正常 HTTP 代理一样使用了, 例如:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408061047971.png" alt="image-20240806104746891"></p><blockquote><p>PS: 不过这个有点重, 适用于需要完整解决方案的场景, 不会作为轻量代理服务器使用</p></blockquote><hr><h2 id="代理客户端" tabindex="-1"><a class="header-anchor" href="#代理客户端"><span>代理客户端</span></a></h2><p>常见的 Clash, V2RayN 都算是代理客户端, 主要用于代理与混淆网络流量, 不过他们也可以为本地或局域网提供代理服务当代理服务器用</p><hr><h3 id="命令行设置http代理" tabindex="-1"><a class="header-anchor" href="#命令行设置http代理"><span>命令行设置HTTP代理</span></a></h3>`,20),hs=s("div",{class:"language-powershell line-numbers-mode","data-ext":"powershell","data-title":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[s("span",{class:"token variable"},"$env"),a(":http_proxy = "),s("span",{class:"token string"},'"http://your_proxy_address:port"'),a(`
`),s("span",{class:"token comment"},"# 使用用户名和密码身份验证的代理服务器:"),a(`
`),s("span",{class:"token variable"},"$env"),a(":http_proxy = "),s("span",{class:"token string"},'"http://username:password@proxy.example.com:8080"'),a(`

`),s("span",{class:"token comment"},"# 例如:"),a(`
`),s("span",{class:"token variable"},"$env"),a(":http_proxy = "),s("span",{class:"token string"},'"http://127.0.0.1:7890"'),a(`
`),s("span",{class:"token variable"},"$env"),a(":https_proxy = "),s("span",{class:"token string"},'"http://127.0.0.1:7890"'),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),ms=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token builtin class-name"},"export"),a(),s("span",{class:"token assign-left variable"},"http_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://your_proxy_address:port"'),a(`
`),s("span",{class:"token comment"},"# 使用用户名和密码身份验证的代理服务器:"),a(`
`),s("span",{class:"token builtin class-name"},"export"),a(),s("span",{class:"token assign-left variable"},"http_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://username:password@proxy.example.com:8080"'),a(`

`),s("span",{class:"token comment"},"# 例如:"),a(`
`),s("span",{class:"token builtin class-name"},"export"),a(),s("span",{class:"token assign-left variable"},"http_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://127.0.0.1:7890"'),a(`
`),s("span",{class:"token builtin class-name"},"export"),a(),s("span",{class:"token assign-left variable"},"https_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://127.0.0.1:7890"'),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),ks=t(`<hr><h3 id="proxychains" tabindex="-1"><a class="header-anchor" href="#proxychains"><span>Proxychains</span></a></h3><h4 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> proxychains
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><p>编辑 <code>/etc/proxychains.conf</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404121055235.png" alt="image-20240412105517854"></p><p>然后就可以在需要代理的命令前加 <code>proxychains</code> 来使用了, 例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>proxychains <span class="token function">wget</span> http://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="todolist" tabindex="-1"><a class="header-anchor" href="#todolist"><span>TODOLIST</span></a></h3>`,12),bs=t('<li><p>暂时不太常单独配置</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> Clash</label></li></ul></li><li><p>商业软件, 需要付费而且价格比较高</p><ul class="task-list-container"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> Proxifier</label></p><p>Proxifier 主要用于将应用程序的流量通过代理服务器进行转发，它支持HTTP、SOCKS v4和SOCKS v5代理</p><p>Proxifier能为那些不原生支持代理的应用程序提供代理服务。它的界面较为简洁，用户可以为单个程序或整个系统设置代理规则。</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> ProxyCap</label></p><p>ProxyCap 除了具备Proxifier的功能外，还支持 VPN 连接的流量代理以及使用SSH协议进行代理设置</p></li></ul></li>',2),vs=s("p",null,"已停止更新于维护",-1),gs=s("p",null,"Sockscap64",-1),xs={href:"https://www.sockscap64.com/sockscap64-official-homepage-chinese/",target:"_blank",rel:"noopener noreferrer"},fs=s("p",null,"SSTap和SocksCap64已于2017年11月19日停止开发及维护和下载.",-1),ys=s("hr",null,null,-1);function _s(Es,Ss){const e=r("ExternalLinkIcon"),p=r("Mermaid"),d=r("RouteLink"),c=r("Tabs");return h(),m("div",null,[b,s("blockquote",null,[s("p",null,[s("a",v,[a("内网渗透之代理转发 - FreeBuf网络安全行业门户"),n(e)])]),s("p",null,[s("a",g,[a("HackNotes/Proxy代理/Proxy代理.md at main · Stick-of-WuKong/HackNotes · GitHub"),n(e)])])]),x,n(p,{id:"mermaid-169",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB4tnbx0wkTn+xe/HxCG1AcScbH0c8ALJJsYBDtnJOZmlcSq6Cra6dQYBAdUJRfURmrAJU2RJOGChthE07NSwHTBQZg0WKD6ODUorLUoligKEQO7oCn/b24nWYIMcUQ5hSwYYbIpoFkocKG2IWNUIRhLksGmoLicIhVyUBTsAqjeRMkDDIKALhGbnA="}),f,y,n(p,{id:"mermaid-174",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB4tnbx0wkTn+xe/HxCG1AcScbH0c8ALJJsYBDtnJOZmlcSq6Cra6dQYBAdUJRfURmrAJU2RJOGChthE07NSwHTBQZg0WKD6ODUorLUoligKEgOAMnqM4Q="}),_,E,S,A,B,q,n(p,{id:"mermaid-191",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB42t/7dMLEJ7sXP5/QBhRHkvFx9DMEixQYRgcU5VdUxiro6topFBsaRAenFpWlFsVCZaHChtiFjVCEU/NSwHQy0BTnnMzUvBKIqQUQq5KBpmAVNsIUBhkFAC7CP3c="}),w,P,D,C,T,s("blockquote",null,[s("p",null,[s("a",H,[a("白话 OSI 七层网络模型 (freecodecamp.org)"),n(e)])])]),N,n(p,{id:"mermaid-379",code:"eJxLL0osyFAIceJSAILi0iQI/9mcNU/nbHiyY/ezObvAMiDgqKHhk5+cmKPgkV9covti/7xnfUs1NcHSqXkpXLhNeNq//snupS/W7X85fd3Tjg3PZ7U82dHwtH9DeGZeSn55MZo1ThoaIUWJecUF+UUlYKtskorsXuxd87R/IsTQnMziktS8gqL8EqBhIMmg1Nz8klSwWoXk/Ly81OQSkGacbkM1XgHTec9nr3u2oP3F/jnPV3T7ZOaVVqA50VlDA8lOkBOQrH2yo+vZnM7gYI9nc3qfdi1EcgUnF6ejgq6uXQ1QUsEZoiMzP08BZICunQLUX0AjahScQOoUnLm4AOxpsZA="}),F,s("p",null,[a("SSH 端口转发分为本地转发, 远程转发以及动态转发三类; 请参阅 "),n(d,{to:"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/SSH%E9%9A%A7%E9%81%93.html"},{default:l(()=>[a("SSH隧道")]),_:1})]),L,I,U,R,s("ul",null,[s("li",null,[a("Nginx "),s("ul",null,[s("li",null,[s("a",O,[a("Nginx 正向代理 http、https（openEuler）-腾讯云开发者社区-腾讯云 (tencent.com)"),n(e)])]),s("li",null,[s("a",K,[a("Nginx-正向代理实现 - 别来无恙- - 博客园 (cnblogs.com)"),n(e)])])])]),s("li",null,[a("Apache HTTP Server "),s("ul",null,[s("li",null,[s("a",M,[a("Apache httpd Server 配置正向代理 - luojiahu - 博客园 (cnblogs.com)"),n(e)])])])])]),W,s("blockquote",null,[s("p",null,[s("a",J,[a("squid代理及常见的代理上网 - SSgeek - 博客园 (cnblogs.com)"),n(e)])]),s("p",null,[s("a",Q,[a("squid : Optimising Web Delivery (squid-cache.org)"),n(e)])]),s("p",null,[s("a",V,[a("Binary Packages for Squid | Squid Web Cache wiki (squid-cache.org)"),n(e)])]),$,s("p",null,[s("a",G,[a("如何在Ubuntu 20.04上安装和配置Squid Proxy-域风网 (yfname.com)"),n(e)])])]),Z,Y,s("p",null,[a("可以在 "),s("a",j,[a("Binary Packages for Squid | Squid Web Cache wiki (squid-cache.org)"),n(e)]),a(" 下载适用于各个系统的 squid 二进制文件")]),z,X,n(c,{id:"495",data:[{id:"Ubuntu"}],active:0},{title0:l(({value:i,isActive:o})=>[a("Ubuntu")]),tab0:l(({value:i,isActive:o})=>[s("p",null,[a("在 "),s("a",ss,[a("Squid on Ubuntu | Squid Web Cache wiki (squid-cache.org)"),n(e)]),a(" 可以看到, 直接使用如下命令安装即可")]),as,ns,es,ts,ls]),_:1}),is,s("p",null,[a("如果需要精确配置需要哪些IP网段连接的话可以参阅配置文件注释以及 "),s("a",os,[a("如何在Ubuntu 20.04上安装和配置Squid Proxy-域风网 (yfname.com)"),n(e)])]),ps,s("blockquote",null,[s("p",null,[s("a",rs,[a("用ssh做firefox的代理_空空法师的博客-CSDN博客"),n(e)])])]),cs,s("blockquote",null,[s("p",null,[s("a",ds,[a("goproxy/README_ZH.md at master · snail007/goproxy · GitHub"),n(e)])])]),us,n(c,{id:"716",data:[{id:"powershell"},{id:"Linux"}],active:0},{title0:l(({value:i,isActive:o})=>[a("powershell")]),title1:l(({value:i,isActive:o})=>[a("Linux")]),tab0:l(({value:i,isActive:o})=>[hs]),tab1:l(({value:i,isActive:o})=>[ms]),_:1}),ks,s("ul",null,[bs,s("li",null,[vs,s("ul",null,[s("li",null,[gs,s("blockquote",null,[s("p",null,[s("a",xs,[a("SocksCap64官方首页 - SocksCap64"),n(e)])])]),fs])])])]),ys])}const qs=u(k,[["render",_s],["__file","index.html.vue"]]),ws=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/","title":"代理转发","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"正向代理与反向代理","slug":"正向代理与反向代理","link":"#正向代理与反向代理","children":[{"level":3,"title":"正向代理(Forward Proxy)","slug":"正向代理-forward-proxy","link":"#正向代理-forward-proxy","children":[]},{"level":3,"title":"反向代理(Reverse Proxy)","slug":"反向代理-reverse-proxy","link":"#反向代理-reverse-proxy","children":[]}]},{"level":2,"title":"代理协议","slug":"代理协议","link":"#代理协议","children":[{"level":3,"title":"Socks 协议","slug":"socks-协议","link":"#socks-协议","children":[]}]},{"level":2,"title":"端口转发","slug":"端口转发","link":"#端口转发","children":[{"level":3,"title":"使用 netsh 设置端口转发","slug":"使用-netsh-设置端口转发","link":"#使用-netsh-设置端口转发","children":[]},{"level":3,"title":"SSH隧道(端口转发)","slug":"ssh隧道-端口转发","link":"#ssh隧道-端口转发","children":[]}]},{"level":2,"title":"代理服务器","slug":"代理服务器","link":"#代理服务器","children":[{"level":3,"title":"Clash","slug":"clash","link":"#clash","children":[]},{"level":3,"title":"squid","slug":"squid","link":"#squid","children":[]},{"level":3,"title":"使用 SSH 创建动态端口转发作 socks 代理服务器","slug":"使用-ssh-创建动态端口转发作-socks-代理服务器","link":"#使用-ssh-创建动态端口转发作-socks-代理服务器","children":[]},{"level":3,"title":"snail007/goproxy","slug":"snail007-goproxy","link":"#snail007-goproxy","children":[]}]},{"level":2,"title":"代理客户端","slug":"代理客户端","link":"#代理客户端","children":[{"level":3,"title":"命令行设置HTTP代理","slug":"命令行设置http代理","link":"#命令行设置http代理","children":[]},{"level":3,"title":"Proxychains","slug":"proxychains","link":"#proxychains","children":[]},{"level":3,"title":"TODOLIST","slug":"todolist","link":"#todolist","children":[]}]}],"git":{"createdTime":1714444444000,"updatedTime":1728376776000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":2},{"name":"ayusummer233","email":"ayusummer233@gmail.com","commits":2},{"name":"233","email":"ayusummer233@gmail.com","commits":1},{"name":"233","email":"ayusummer233@vip.qq.com","commits":1},{"name":"233PC","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":12.11,"words":3634},"filePathRelative":"网络安全/内网渗透/代理转发/index.md","localizedDate":"2024年4月30日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://www.freebuf.com/articles/web/256415.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">内网渗透之代理转发 - FreeBuf网络安全行业门户</a></p>\\n<p><a href=\\"https://github.com/Stick-of-WuKong/HackNotes/blob/main/Proxy%E4%BB%A3%E7%90%86/Proxy%E4%BB%A3%E7%90%86.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">HackNotes/Proxy代理/Proxy代理.md at main · Stick-of-WuKong/HackNotes · GitHub</a></p>\\n</blockquote>"}');export{qs as comp,ws as data};
