import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as d,c as u,a as e,d as a,b as n,w as i,e as t}from"./app-BT-bWAve.js";const h={},m=t(`<h1 id="linux-网络配置" tabindex="-1"><a class="header-anchor" href="#linux-网络配置"><span>Linux 网络配置</span></a></h1><ul><li><a href="#linux-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE">Linux 网络配置</a><ul><li><a href="#%E8%B7%AF%E7%94%B1%E6%93%8D%E4%BD%9C">路由操作</a><ul><li><a href="#ip-route">ip route</a></li><li><a href="#routedeprecated">route(deprecated)</a></li></ul></li><li><a href="#networkmanager">NetworkManager</a><ul><li><a href="#%E9%BB%98%E8%AE%A4%E8%B7%AF%E7%94%B1">默认路由</a></li></ul></li><li><a href="#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8%E7%BD%91%E5%8D%A1">启用与禁用网卡</a></li><li><a href="#ip-%E8%BD%AC%E6%8D%A2">IP 转换</a></li><li><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a><ul><li><a href="#iptables">iptables</a><ul><li><a href="#%E6%B7%BB%E5%8A%A0%E8%A7%84%E5%88%99">添加规则</a></li></ul></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86">代理</a></li></ul></li></ul><hr><h2 id="路由操作" tabindex="-1"><a class="header-anchor" href="#路由操作"><span>路由操作</span></a></h2><h3 id="ip-route" tabindex="-1"><a class="header-anchor" href="#ip-route"><span>ip route</span></a></h3><ul><li><p>查看路由表</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>添加一条路由</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route <span class="token function">add</span> <span class="token punctuation">[</span>目的网段/掩码<span class="token punctuation">]</span> via <span class="token punctuation">[</span>网关<span class="token punctuation">]</span> dev <span class="token punctuation">[</span>网卡<span class="token punctuation">]</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token number">192.0</span>.2.0/24 via <span class="token number">10.0</span>.0.1 dev eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除一条路由</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route del <span class="token punctuation">[</span>目标网段/掩码<span class="token punctuation">]</span> via <span class="token punctuation">[</span>网关<span class="token punctuation">]</span> dev <span class="token punctuation">[</span>网卡<span class="token punctuation">]</span>
<span class="token function">ip</span> route del <span class="token number">192.0</span>.2.0/24 via <span class="token number">10.0</span>.0.1 dev eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看某个目的的路由信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route get <span class="token number">192.0</span>.2.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><h3 id="route-deprecated" tabindex="-1"><a class="header-anchor" href="#route-deprecated"><span>route(deprecated)</span></a></h3><blockquote><p><code>ip route</code> 命令是属于 iproute2 套件的一部分，这个套件在现代的 Linux 系统中已经成为了网络配置的标准工具。 相较于旧的 <code>route</code> 命令，<code>ip route</code> 提供了更多的功能并且在设计上更加灵活和强大。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关<span class="token punctuation">]</span>
route del <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样加的路由是临时的, 每次重启都会掉路由, 可以通过在 <code>/root/.bashrc</code> 中写入如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 如果路由中没有到目的网段 [目的网段] 的路由则添加此条路由</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">ip</span> route <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-q</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>子网掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关ip<span class="token punctuation">]</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于每次打开 bash 都会加载 <code>~/.bashrc</code>, 而 VSCode SSH 连远程主机一般第一件事就是新建一个 bash, 所以这样也可以变相解决手动加路由的困扰</p><blockquote><p>不用 bash 的话也可以手动 source ~/.bashrc 来加载路由</p><hr><p><code>-q</code> 参数使得 <code>ip route | grep [目的网段]</code> 命令不输出结果, 不使用 <code>-d</code> 的话每次新建 bash 都会看到该条命令的输出结果</p></blockquote><hr><h2 id="networkmanager" tabindex="-1"><a class="header-anchor" href="#networkmanager"><span>NetworkManager</span></a></h2>`,16),v={href:"https://zh.wikipedia.org/wiki/NetworkManager",target:"_blank",rel:"noopener noreferrer"},b={href:"https://wiki.archlinuxcn.org/wiki/NetworkManager?rdfrom=https%3A%2F%2Fwiki.archlinux.org%2Findex.php%3Ftitle%3DNetworkManager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)%26redirect%3Dno",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>NetworkManager 是 RedHat 公司在 2004 年发起的项目, 目标是让 Linux 用户能够更容易地处理现代的网络需求</p><p>对于旧有的 <code>ifupdown</code> 和 <code>/etc/network/interfaces</code> 配置而言, NetworkManager 提供了一个用户友好的 GUI, 让用户能够更轻松地管理网络连接和配置</p><ul><li><p>列出所有连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310110940549.png" alt="image-20231011094043329"></p></li><li><p>查看特定连接的详细信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection show <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310110942198.png" alt="image-20231011094222201"></p></li><li><p>修改连接属性</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection modify <span class="token string">&quot;连接名称&quot;</span> 属性 值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启用/禁用连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection up <span class="token string">&quot;连接名称&quot;</span>
nmcli connection down <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection delete <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><p>除了用命令行操作连接配置外, NetworkManager 也可以通过修改文件并重新加载网络配置</p><p>NetworkManager 的配置文件通常存储在 <code>/etc/NetworkManager/system-connections</code> 目录下, 每个连接对应一个配置文件</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310111036902.png" alt="image-20231011103622777"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310111036655.png" alt="image-20231011103648130"></p><p>修改完成后保存, 然后重启网络服务使修改生效:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart NetworkManager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="默认路由" tabindex="-1"><a class="header-anchor" href="#默认路由"><span>默认路由</span></a></h3><p>可以在 <code>Advanced Network Configuration</code> 中配置指定网卡的 <code>IPv4 Settings</code> 的 <code>Routes</code>, 可以配置默认路由</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408151547573.png" alt="image-20240815154532641"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408151547410.png" alt="image-20240815154551436"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408151549131.png" alt="image-20240815154929855"></p><hr><p>删除默认的网关路由 <code>0.0.0.0/0</code> 则需要编辑 <code>/etc/NetworkManager/system-connections</code> 中对应网卡信息的配置文件</p><p>添加</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">never-default</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202408151553183.png" alt="image-20240815155307972"></p><ul><li><code>never-default=true</code>：此配置指示NetworkManager不要将该连接作为默认网关，从而避免创建默认路由<code>0.0.0.0/0</code></li></ul><hr><h2 id="启用与禁用网卡" tabindex="-1"><a class="header-anchor" href="#启用与禁用网卡"><span>启用与禁用网卡</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 禁用 ensxx(下面两条命令均可)</span>
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> ensxx down
<span class="token function">ifconfig</span>  ensxx down
<span class="token comment"># 启用 ensxx(下面两条命令均可)</span>
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> ensxx up
<span class="token function">ifconfig</span>  ensxx up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是禁用网卡后相应的路由也会掉, 重新启用后需要重配路由</p><hr><h2 id="ip-转换" tabindex="-1"><a class="header-anchor" href="#ip-转换"><span>IP 转换</span></a></h2>`,28),k={href:"https://www.cnblogs.com/ailx10/p/5535943.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<p>IP 地址分公有地址和私有地址</p><ul><li><p>public address 是由 INIC(internet network information center)负责，这些 ip 地址分配给注册并向 INIC 提出申请的组织机构。通过它访问 internet</p></li><li><p>private address 是属于非注册地址，专门为组织内部使用;</p><p>private ip address 是不可能直接用来跟 WAN 通信的，要么利用帧来通信(FRE 帧中继，HDLC,PPP) ,要么需要路由的 NAT 功能把私有地址转换为一个公有 ip</p></li></ul><p>选择一台电脑(有两个网卡或者用单网卡然后用软件虚拟多一个网卡) 充当网关，一个网卡(eth0)连接外网 ISP，另一网卡(eth1)连接内网(即局域网)。局域网内的 ip 地址都是私用地址，只能在内部使用，在公网上是不可见的，所以局域网电脑要上网必须修改 ip，这就是网关的工作。</p><ul><li><p>工作原理：</p><p>内网主机向公网发送数据包时，由于目的主机跟源主机不在同一网段，所以数据包暂时发往内网默认网关处理，而本网段的主机对此数据包不做任何回应。</p><p>由于源主机 ip 是私有的，禁止在公网使用，所以必须将数据包的源发送地址修改成公网上的可用 ip，这就是网关收到数据包之后首先要做的工作--ip 转换。</p><p>然后网关再把数据包发往目的主机。目的主机收到数据包之后，只认为这是网关发送的请求，并不知道内网主机的存在，也没必要知道，目的主机处理完请求，把回应信息发还给网关。网关收到后，将目的主机发还的数据包的目的 ip 地址修改为发出请求的内网主机的 ip 地址，并将其发给内网主机。这就是网关的第二个工作--数据包的路由转发。</p><p>内网的主机只要查看数据包的目的 ip 与发送请求的源主机 ip 地址相同，就会回应，这就完成了一次请求。</p></li></ul><p>出于安全考虑，Linux 系统默认是禁止数据包转发的。所谓转发即当主机拥有多于一块的网卡时，其中一块收到数据包，根据数据包的目的 ip 地址将包发往本机另一网卡，该网卡根据路由表继续发送数据包。这通常就是路由器所要实现的功能。 配置 Linux 系统的 ip 转发功能，首先保证硬件连通，然后打开系统的转发功能</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">less</span> /proc/sys/net/ipv4/ip_forward
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),x={href:"https://www.runoob.com/linux/linux-comm-less.html",target:"_blank",rel:"noopener noreferrer"},E=e("p",null,"less 与 more 类似，less 可以随意浏览文件，支持翻页和搜索，支持向上翻页和向下翻页。",-1),_=t(`<p>该文件内容为 0，表示禁止数据包转发，1 表示允许，将其修改为 1。可使用命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;1&quot;</span> <span class="token operator">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改文件内容，重启网络服务或主机后效果不再。</p><p>若要其自动执行，可将命令 <code>echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward</code> 写入脚本 <code>/etc/rc.d/rc.local</code> 或者 在 <code>/etc/sysconfig/network</code> 脚本中添加 <code>FORWARD_IPV4=&quot;YES&quot;</code></p><hr><h2 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h2><h3 id="iptables" tabindex="-1"><a class="header-anchor" href="#iptables"><span>iptables</span></a></h3>`,7),w={href:"https://www.cnblogs.com/sparkdev/p/9340924.html",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>iptables 是 Linux 管理员用来设置 IPv4 数据包过滤条件和 NAT 的命令行工具。iptables 工具运行在用户态，主要是设置各种规则。而 netfilter 则运行在内核态，执行那些设置好的规则。</p><hr><h4 id="添加规则" tabindex="-1"><a class="header-anchor" href="#添加规则"><span>添加规则</span></a></h4><p>我们可以通过规则来匹配数据包，具体的匹配条件包括 IP、网段、网络接口(interface)和传输协议(tcp、udp 等)。 添加规则的命令格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token punctuation">[</span>-AI chain<span class="token punctuation">]</span> <span class="token punctuation">[</span>-io interface<span class="token punctuation">]</span> <span class="token punctuation">[</span>-p 协议<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s 来源 IP<span class="token punctuation">]</span> <span class="token punctuation">[</span>-d 目标 IP<span class="token punctuation">]</span> <span class="token parameter variable">-j</span> <span class="token punctuation">[</span>ACCEPT,DROP,REJECT,LOG<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-A</code>：针对某个规则链添加一条规则，新添加的规则排在现有规则的后面。 <code>-I</code>：针对某个规则链插入一条规则，可以为新插入的规则指定在链中的序号。如果不指定序号，则新的规则会变成第一条规则。 <code>-i</code>：指定数据包进入的那个网络接口，比如 eth0、lo 等，需要与 INPUT 链配合使用。 <code>-o</code>: 指定传出数据包的那个网络接口，需要与 OUTPUT 链配合使用。 <code>-p</code>: 指定此规则适用于那种网络协议(常用的协议有 tcp、udp、icmp，all 指适用于所有的协议)。 <code>-s</code>：指定数据包的来源 IP/网段，可以指定单个 IP，如 192.168.1.100，也可以指定一个网段，如 192.168.1.0/24。还可以通过 ！表示非的意思，如 ! 192.168.1.0/24 表示除了 192.168.1.0/24 之外的数据包。 <code>-d</code>：指定数据包的目标 IP/网段，其它与 -s 选项相同。 <code>-j</code>：指定匹配成功后的行为，主要有 ACCEPT、DROP、REJECT 和 LOG。</p><hr><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h2>`,8),y=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# shell 中临时设置(若需要永久设置则写到 ~/.bashrc 中即可)"),a(`
`),e("span",{class:"token builtin class-name"},"export"),a(),e("span",{class:"token assign-left variable"},"http_proxy"),e("span",{class:"token operator"},"="),a(`http://127.0.0.1:7890
`),e("span",{class:"token builtin class-name"},"export"),a(),e("span",{class:"token assign-left variable"},"https_proxy"),e("span",{class:"token operator"},"="),a(`http://127.0.0.1:7890
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051040864.png",alt:"image-20230905104050714"})],-1),D=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# 下掉 proxy:"),a(`
`),e("span",{class:"token builtin class-name"},"unset"),a(` http_proxy
`),e("span",{class:"token builtin class-name"},"unset"),a(` https_proxy
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051059445.png",alt:"image-20230905105927377"})],-1),q=e("p",null,[a("安装 "),e("code",null,"proxychains")],-1),P=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),a(),e("span",{class:"token function"},"apt"),a(),e("span",{class:"token function"},"install"),a(` proxychains
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),I=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051029806.png",alt:"image-20230905102950537"})],-1),C=e("p",null,[a("打开上述报错中提到的 Config File, 编辑 "),e("code",null,"[ProxyList]"),a(" 属性为需要配置的代理")],-1),L=e("div",{class:"language-properties line-numbers-mode","data-ext":"properties","data-title":"properties"},[e("pre",{class:"language-properties"},[e("code",null,[a(`[ProxyList]
`),e("span",{class:"token comment"},"# add proxy here ..."),a(`
`),e("span",{class:"token comment"},"# meanwile"),a(`
`),e("span",{class:"token comment"},'# defaults set to "tor"'),a(`
`),e("span",{class:"token key attr-name"},"socks5"),a(),e("span",{class:"token value attr-value"},"	127.0.0.1 7890"),a(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),M=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051037143.png",alt:"image-20230905103741065"})],-1),T=e("p",null,[a("然后在需要使用代理的命令前加上 "),e("code",null,"proxychains"),a(" 即可使用")],-1),F=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051038312.png",alt:"image-20230905103831201"})],-1),R=e("hr",null,null,-1);function S(O,V){const s=p("ExternalLinkIcon"),c=p("Tabs");return d(),u("div",null,[m,e("blockquote",null,[e("p",null,[e("a",v,[a("NetworkManager - 维基百科，自由的百科全书 (wikipedia.org)"),n(s)])]),e("p",null,[e("a",b,[a("NetworkManager - Arch Linux 中文维基 (archlinuxcn.org)"),n(s)])])]),g,e("blockquote",null,[e("p",null,[e("a",k,[a("/proc/sys/net/ipv4/ip_forward - ailx10 - 博客园 (cnblogs.com)"),n(s)])])]),f,e("blockquote",null,[e("p",null,[e("a",x,[a("Linux less 命令 | 菜鸟教程 (runoob.com)"),n(s)])]),E]),_,e("blockquote",null,[e("p",null,[e("a",w,[a("Linux iptables 命令 - sparkdev - 博客园 (cnblogs.com)"),n(s)])])]),A,n(c,{id:"350",data:[{id:"shell"},{id:"proxychains"}],active:0},{title0:i(({value:l,isActive:o})=>[a("shell")]),title1:i(({value:l,isActive:o})=>[a("proxychains")]),tab0:i(({value:l,isActive:o})=>[y,B,D,N]),tab1:i(({value:l,isActive:o})=>[q,P,I,C,L,M,T,F]),_:1}),R])}const G=r(h,[["render",S],["__file","网络配置.html.vue"]]),H=JSON.parse('{"path":"/%E9%80%9A%E8%AF%86/Linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html","title":"Linux 网络配置","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"路由操作","slug":"路由操作","link":"#路由操作","children":[{"level":3,"title":"ip route","slug":"ip-route","link":"#ip-route","children":[]},{"level":3,"title":"route(deprecated)","slug":"route-deprecated","link":"#route-deprecated","children":[]}]},{"level":2,"title":"NetworkManager","slug":"networkmanager","link":"#networkmanager","children":[{"level":3,"title":"默认路由","slug":"默认路由","link":"#默认路由","children":[]}]},{"level":2,"title":"启用与禁用网卡","slug":"启用与禁用网卡","link":"#启用与禁用网卡","children":[]},{"level":2,"title":"IP 转换","slug":"ip-转换","link":"#ip-转换","children":[]},{"level":2,"title":"防火墙","slug":"防火墙","link":"#防火墙","children":[{"level":3,"title":"iptables","slug":"iptables","link":"#iptables","children":[]}]},{"level":2,"title":"代理","slug":"代理","link":"#代理","children":[]}],"git":{"createdTime":1727161456000,"updatedTime":1727161456000,"contributors":[{"name":"233","email":"ayusummer233@vip.qq.com","commits":1}]},"readingTime":{"minutes":7.79,"words":2336},"filePathRelative":"通识/Linux/网络配置.md","localizedDate":"2024年9月24日","excerpt":"\\n<ul>\\n<li><a href=\\"#linux-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE\\">Linux 网络配置</a>\\n<ul>\\n<li><a href=\\"#%E8%B7%AF%E7%94%B1%E6%93%8D%E4%BD%9C\\">路由操作</a>\\n<ul>\\n<li><a href=\\"#ip-route\\">ip route</a></li>\\n<li><a href=\\"#routedeprecated\\">route(deprecated)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#networkmanager\\">NetworkManager</a>\\n<ul>\\n<li><a href=\\"#%E9%BB%98%E8%AE%A4%E8%B7%AF%E7%94%B1\\">默认路由</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8%E7%BD%91%E5%8D%A1\\">启用与禁用网卡</a></li>\\n<li><a href=\\"#ip-%E8%BD%AC%E6%8D%A2\\">IP 转换</a></li>\\n<li><a href=\\"#%E9%98%B2%E7%81%AB%E5%A2%99\\">防火墙</a>\\n<ul>\\n<li><a href=\\"#iptables\\">iptables</a>\\n<ul>\\n<li><a href=\\"#%E6%B7%BB%E5%8A%A0%E8%A7%84%E5%88%99\\">添加规则</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BB%A3%E7%90%86\\">代理</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{G as comp,H as data};
