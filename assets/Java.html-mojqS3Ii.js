import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as r,c as k,a as n,d as a,b as s,w as p,e}from"./app-BT-bWAve.js";const d={},v=e('<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><hr><ul><li><a href="#java">Java</a><ul><li><a href="#java-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">Java 环境配置</a><ul><li><a href="#%E5%AE%89%E8%A3%85-jdk">安装 jdk</a></li><li><a href="#idea">IDEA</a><ul><li><a href="#ubuntu-%E5%AE%89%E8%A3%85-idea">ubuntu 安装 IDEA</a></li></ul></li><li><a href="#maven">Maven</a><ul><li><a href="#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE">安装与配置</a></li></ul></li></ul></li><li><a href="#java-%E5%8F%8D%E5%B0%84">Java 反射</a><ul><li><a href="#%E5%BE%97%E5%88%B0-class-%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F">得到 Class 的三种方式</a></li></ul></li><li><a href="#%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C">命令执行</a></li></ul></li></ul><hr><h2 id="java-环境配置" tabindex="-1"><a class="header-anchor" href="#java-环境配置"><span>Java 环境配置</span></a></h2><h3 id="安装-jdk" tabindex="-1"><a class="header-anchor" href="#安装-jdk"><span>安装 jdk</span></a></h3>',6),m={href:"https://www.oracle.com/java/technologies/downloads/?er=221886#jdk21-windows",target:"_blank",rel:"noopener noreferrer"},g={href:"https://jdk.java.net/archive/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"可以使用上面 OracleJDK 或者 OracleOpenJDK 的链接下载安装包或者压缩包",-1),h=n("p",null,[a("安装包下载后执行运行可执行程序即可, 压缩包需要解压到指定目录(JDK一般放在 "),n("code",null,"C:\\Program Files\\Java\\jdk"),a(" 目录下)")],-1),j=n("p",null,"安装完/解压到指定目录 后需要配置环境变量",-1),f=n("div",{class:"language-properties line-numbers-mode","data-ext":"properties","data-title":"properties"},[n("pre",{class:"language-properties"},[n("code",null,`JAVA_HOME
jdk安装目录(只能有一个,不能有多个)
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-properties line-numbers-mode","data-ext":"properties","data-title":"properties"},[n("pre",{class:"language-properties"},[n("code",null,[a(`CLASSPATH
.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar
`),n("span",{class:"token comment"},"# tools.jar 可能没有, openjdk中一般就没有, 那就直接:"),a(`
.;%JAVA_HOME%\\lib
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-properties line-numbers-mode","data-ext":"properties","data-title":"properties"},[n("pre",{class:"language-properties"},[n("code",null,[a(`Path
%JAVA_HOME%\\bin
`),n("span",{class:"token comment"},"# Java9之后就不需要下面这个jre目录了"),a(`
%JAVA_HOME%\\jre\\bin
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("blockquote",null,[n("p",null,"这里配置环境变量时需要注意, 不要像如下这样在最后一个环境变量末尾添加分号:"),n("p",null,[n("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202409261426707.png",alt:"image-20240926142618491"})]),n("p",null,"否则编辑的时候看不出来:"),n("p",null,[n("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202409261426636.png",alt:"image-20240926142649584"})]),n("p",null,[a("但是后续拼接 "),n("code",null,"PATH(%HOME%\\bin)"),a(" 时会拼接成 "),n("code",null,"C:\\Program Files\\Java\\jdk\\openjdk-21.0.2;\\bin"),a(" 导致无法正确定位目录")]),n("hr"),n("p",null,[a("以及这里 "),n("code",null,"JAVA_HOME"),a(" 只能配置/生效一个 JDK 安装目录, 要切换 JAVA 版本的话可以用类似如下 Powershell 脚本来快速设置目标环境变量")]),n("div",{class:"language-powershell line-numbers-mode","data-ext":"powershell","data-title":"powershell"},[n("pre",{class:"language-powershell"},[n("code",null,[n("span",{class:"token comment"},"# 切换到 JDK 8"),a(`
`),n("span",{class:"token variable"},"$env"),a(":JAVA_HOME = "),n("span",{class:"token string"},'"C:\\Program Files\\Java\\jdk1.8.0_281"'),a(`
`),n("span",{class:"token variable"},"$env"),a(":Path = "),n("span",{class:"token string"},[a('"'),n("span",{class:"token variable"},"$env"),a(":JAVA_HOME\\bin;"),n("span",{class:"token variable"},"$env"),a(':Path"')]),a(`
`),n("span",{class:"token variable"},"$env"),a(":CLASSPATH = "),n("span",{class:"token string"},[a('".;'),n("span",{class:"token variable"},"$env"),a(':JAVA_HOME\\lib"')]),a(`
`),n("span",{class:"token function"},"Write-Output"),a(),n("span",{class:"token string"},'"Switched to JDK 8"'),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),E=n("p",null,"配完后",-1),w=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"java"),a(`
javac
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("p",null,"看下有正常回显即可",-1),A=n("hr",null,null,-1),J={href:"https://openjdk.org/install/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://zhuanlan.zhihu.com/p/399295670",target:"_blank",rel:"noopener noreferrer"},D=n("hr",null,null,-1),M=n("ul",null,[n("li",null,[n("p",null,"安装 openjdk8"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),a(),n("span",{class:"token function"},"apt-get"),a(),n("span",{class:"token function"},"install"),a(` openjdk-8-jre
`),n("span",{class:"token function"},"sudo"),a(),n("span",{class:"token function"},"apt-get"),a(),n("span",{class:"token function"},"install"),a(` openjdk-8-jdk
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])]),n("p",null,[a("安装完后可以 "),n("code",null,"java -version"),a(" 看下")]),n("blockquote",null,[n("p",null,[n("img",{src:"http://cdn.ayusummer233.top/img/202209231124375.png",alt:"image-20220923112443274"})])])])],-1),N=n("hr",null,null,-1),O=n("p",null,[a("或者下载 "),n("code",null,"tar.gz"),a(" 包然后解压, 解压后在 "),n("code",null,"bin"),a(" 目录下有 "),n("code",null,"java"),a(" 和 "),n("code",null,"javac")],-1),R=n("p",null,"多版本 jdk 注册:",-1),B=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# 注册 java"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/java "),n("span",{class:"token function"},"java"),a(),n("span",{class:"token punctuation"},"["),a("解压后bin目录下的java文件绝对路径"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"["),a("优先级数字"),n("span",{class:"token punctuation"},"]"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(),n("span",{class:"token function"},"java"),a(),n("span",{class:"token punctuation"},"["),a("解压后bin目录下的java文件绝对路径"),n("span",{class:"token punctuation"},"]"),a(`

`),n("span",{class:"token comment"},"# 注册 javac"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/javac javac "),n("span",{class:"token punctuation"},"["),a("解压后bin目录下的javac文件绝对路径"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"["),a("优先级数字"),n("span",{class:"token punctuation"},"]"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(" javac "),n("span",{class:"token punctuation"},"["),a("解压后bin目录下的javac文件绝对路径"),n("span",{class:"token punctuation"},"]"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("blockquote",null,[n("p",null,"例如:"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[a("update-alternatives "),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/java "),n("span",{class:"token function"},"java"),a(" /home/ajest/tools/java/jdk1.8.0_351/bin/java "),n("span",{class:"token number"},"18351"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(),n("span",{class:"token function"},"java"),a(` /home/ajest/tools/java/jdk1.8.0_351/bin/java
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/javac javac /home/ajest/tools/java/jdk1.8.0_351/bin/javac "),n("span",{class:"token number"},"18351"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(` javac /home/ajest/tools/java/jdk1.8.0_351/bin/javac

update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/java "),n("span",{class:"token function"},"java"),a(" /home/ajest/tools/java/jdk-11.0.17/bin/java "),n("span",{class:"token number"},"11017"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(),n("span",{class:"token function"},"java"),a(` /home/ajest/tools/java/jdk-11.0.17/bin/java
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/javac javac /home/ajest/tools/java/jdk-11.0.17/bin/javac "),n("span",{class:"token number"},"11017"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(` javac /home/ajest/tools/java/jdk-11.0.17/bin/javac

update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/java "),n("span",{class:"token function"},"java"),a(" /home/ajest/tools/java/jdk-17.0.5/bin/java "),n("span",{class:"token number"},"1705"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(),n("span",{class:"token function"},"java"),a(` /home/ajest/tools/java/jdk-17.0.5/bin/java
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/javac javac /home/ajest/tools/java/jdk-17.0.5/bin/javac "),n("span",{class:"token number"},"1705"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(` javac /home/ajest/tools/java/jdk-17.0.5/bin/javac


update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/java "),n("span",{class:"token function"},"java"),a(" /home/ajest/tools/java/jdk-19.0.1/bin/java "),n("span",{class:"token number"},"1901"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(),n("span",{class:"token function"},"java"),a(` /home/ajest/tools/java/jdk-19.0.1/bin/java
update-alternatives `),n("span",{class:"token parameter variable"},"--install"),a(" /usr/bin/javac javac /home/ajest/tools/java/jdk-19.0.1/bin/javac "),n("span",{class:"token number"},"1901"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--set"),a(` javac /home/ajest/tools/java/jdk-19.0.1/bin/javac
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),S=n("p",null,"多版本 JDK 管理",-1),H=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[a("update-alternatives "),n("span",{class:"token parameter variable"},"--config"),a(),n("span",{class:"token function"},"java"),a(`
update-alternatives `),n("span",{class:"token parameter variable"},"--config"),a(` javac
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=e('<hr><h3 id="idea" tabindex="-1"><a class="header-anchor" href="#idea"><span>IDEA</span></a></h3><h4 id="ubuntu-安装-idea" tabindex="-1"><a class="header-anchor" href="#ubuntu-安装-idea"><span>ubuntu 安装 IDEA</span></a></h4><p>直接远程连接安装即可</p><p><img src="http://cdn.ayusummer233.top/img/202209231852362.png" alt="image-20220923185210262"></p><hr><h3 id="maven" tabindex="-1"><a class="header-anchor" href="#maven"><span>Maven</span></a></h3>',7),T={href:"https://blog.csdn.net/huo920/article/details/82082403",target:"_blank",rel:"noopener noreferrer"},K=n("h4",{id:"安装与配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装与配置"},[n("span",null,"安装与配置")])],-1),F={href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},I=e(`<img src="http://cdn.ayusummer233.top/img/202201011531250.png" alt="image-20220101153104101" style="zoom:80%;"><p>解压到某个文件夹</p><p><img src="http://cdn.ayusummer233.top/img/202201011533908.png" alt="image-20220101153336808"></p><p>配置 Maven 环境变量</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code>MAVEN_HOME
maven解压目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202201011535134.png" alt="image-20220101153540046"></p><p>编辑 PATH 变量</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code>PATH
%MAVEN_HOME%\\bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202201011537762.png" alt="image-20220101153734649"></p><p>验证配置: <code>mvn -v</code></p><img src="http://cdn.ayusummer233.top/img/202201011543915.png" alt="image-20220101154317795" style="zoom:80%;"><p>修改 Maven 配置 <code>C:\\Programming\\Java\\apache-maven-3.8.4\\conf\\settings.xml</code></p><blockquote><p>一般来说不需要修改本地仓库位置, 默认在 <code>\${user.home}/.m2/repository</code>, 保持默认即可</p><p>如果要修改本地仓库位置的话可以如下配置:</p><p><img src="http://cdn.ayusummer233.top/img/202201011548230.png" alt="image-20220101154858114"></p><p>如下目录要配置的话需要改一下权限, 因为 <code>Program Files</code> 目录需要的权限比较特殊</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409260304334.png" alt="image-20240926030454284"></p></blockquote><p>修改 maven 默认的 JDK 版本</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>     
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>JDK-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>       
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>       
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>       
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>       
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>       
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202201011559443.png" alt="image-20220101155951312"></p><blockquote><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Repository for JDK 21 builds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://www.myhost.com/maven/jdk21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">&gt;</span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409291501428.png" alt="image-20240929150148267"></p></blockquote><p>添加国内镜像源</p>`,18),z={href:"https://gist.github.com/y0ngb1n/324aa1b02ed19d61a521b2d421086bfe",target:"_blank",rel:"noopener noreferrer"},$=e(`<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyun-maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- 只镜像中央仓库 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/repository/central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- 镜像所有仓库 --&gt;</span>
      <span class="token comment">&lt;!--&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;--&gt;</span>
      <span class="token comment">&lt;!--&lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409260312055.png" alt="image-20240926031258998"></p><blockquote><p>这里全局只镜像中央仓库就行, 之后项目需要可以单独为项目配置 maven 镜像</p><p>在项目的 <code>pom.xml</code> 中定义镜像即可, 例如:</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span>
    ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyun-public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h2 id="java生态调查" tabindex="-1"><a class="header-anchor" href="#java生态调查"><span>Java生态调查</span></a></h2>`,5),L={href:"https://www.jetbrains.com/zh-cn/lp/devecosystem-2023/java/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.51cto.com/article/754195.html",target:"_blank",rel:"noopener noreferrer"},U=e('<p><img src="http://cdn.ayusummer233.top/DailyNotes/202409271500616.png" alt="企业微信截图_1727419756866"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409271500715.png" alt="企业微信截图_17274199895108"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409271500838.png" alt="企业微信截图_17274201077136"></p><hr><h2 id="java-反射" tabindex="-1"><a class="header-anchor" href="#java-反射"><span>Java 反射</span></a></h2>',5),G={href:"https://www.cnblogs.com/ysocean/p/6516248.html",target:"_blank",rel:"noopener noreferrer"},Y=n("hr",null,null,-1),Q=e(`<p>Java反射就是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；并且能改变它的属性。而这也是Java被视为(准)动态语言的一个关键性质</p><blockquote><p>为啥要说是准动态，因为一般而言的动态语言定义是程序运行时，允许改变程序结构或变量类型，这种语言称为动态语言。从这个观点看，Perl，Python，Ruby是动态语言，C++，Java，C#不是动态语言。</p></blockquote><p>反射机制允许程序在运行时取得任何一个已知名称的class的内部信息，包括包括其modifiers(修饰符)，fields(属性)，methods(方法)等，并可于运行时改变fields内容或调用methods。那么我们便可以更灵活的编写代码，代码可以在运行时装配，无需在组件之间进行源代码链接，降低代码的耦合度；还有动态代理的实现等等；</p><blockquote><p>但是需要注意的是反射使用不当会造成很高的资源消耗！</p></blockquote><hr><h3 id="得到-class-的三种方式" tabindex="-1"><a class="header-anchor" href="#得到-class-的三种方式"><span>得到 Class 的三种方式</span></a></h3><p>比如新建一个 Person 类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">reflect</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;Jacob&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Person()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m working!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212071556647.png" alt="image-20221207152138868"></p><p>现在要在其他类中获取一个 Person 对象的 class 可以使用如下三种方式:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">reflect</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> reflect <span class="token punctuation">{</span>
    <span class="token comment">// 1. 通过对象调用 getClass() 方法获取 Person 的 Class;</span>
    <span class="token comment">// 通常用于传入一个 Object 对象, 但是不知道具体是什么类, 通过 getClass() 方法获取 Class 对象;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">by_getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1. 通过对象调用 getClass() 方法获取 Person 的 Class;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Person</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span> c1 <span class="token operator">=</span> person1<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 2.直接通过 类名.class 的方式得到,该方法最为安全可靠，程序性能更高</span>
    <span class="token comment">// 这说明每个类都有一个隐含的静态成员变量 class</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">by_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2.直接通过 类名.class 的方式得到,该方法最为安全可靠，程序性能更高&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span> c2 <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 3.通过 Class 类的静态方法 forName(String className) 得到</span>
    <span class="token comment">// 该方法将类的全名(包括包名) 作为参数，返回对应的 Class 对象</span>
    <span class="token comment">// 用的最多, 但可能抛出 ClassNotFoundException 异常</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">by_forName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;3.通过 Class 类的静态方法 forName(String className) 得到&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span> c3 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;reflect.Person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">reflect<span class="token punctuation">.</span>reflect</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> test <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reflect r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">reflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span><span class="token function">by_getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span><span class="token function">by_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span><span class="token function">by_forName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212071556151.png" alt="image-20221207155641124"></p><hr><h2 id="命令执行" tabindex="-1"><a class="header-anchor" href="#命令执行"><span>命令执行</span></a></h2><p>正常写法</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;calc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>反射写法:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cls <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Method</span> method <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Runtime</span> runtime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">)</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    runtime<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;calc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>line3</code> 的 <code>Method</code> 指的是 <code>java.lang.reflect.Method</code> 类, 在 Java 中，<code>java.lang.reflect.Method</code> 类提供了关于类或接口上单个方法的信息和访问权限。可以使用 <code>java.lang.reflect.Method</code> 类的实例来获取方法的信息(如返回类型、参数类型、访问修饰符等) 或者对它进行调用。</li><li><code>line3</code> 的 <code>getMethod</code> 方法被用来获取名为 <code>getRuntime</code> 的方法(这是 <code>java.lang.Runtime</code> 类的一个静态方法)。然后，<code>invoke</code> 方法被用来调用这个获取到的方法。</li><li>因为 <code>getRuntime</code> 是一个无参数的方法，所以 <code>invoke</code> 方法被调用时只传入了一个 <code>null</code> 参数，这个 <code>null</code> 参数表示当前正在调用的是一个不需要实例对象的方法(即静态方法)。</li></ul><hr><p>将反射写法写为一行:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Runtime</span><span class="token punctuation">)</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;calc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意的是 <code>Class.getMethod</code> 的返回类型是 <code>java.lang.reflect.Method</code>，而 <code>Method.invoke()</code> 的返回类型是 <code>java.lang.Object</code>。</p><p>因此，当你试图在返回的 Object 类型上调用 <code>exec</code> 方法时，编译器无法找到 <code>exec</code> 方法，因为 <code>java.lang.Object</code> 类没有定义 <code>exec</code> 方法。</p><p>所以这里用的 <code>(Runtime)</code> 来将 <code>invoke</code> 的返回值强制类型转换为 <code>Runtime</code> 类型，因为 <code>exec</code> 是 <code>Runtime</code> 类的方法</p><hr><p>不加强制类型转换的话可以这样写:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;exec&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>
        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;calc&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先获取 <code>exec</code> 方法的 <code>Method</code> 对象，然后再调用 <code>invoke</code> 方法，其第一个参数传递了 <code>exec</code> 方法的调用者(<code>Runtime</code> 对象) ，第二个参数传递了 <code>exec</code> 方法的参数(<code>calc</code>) 。</p><p>或者通过 <code>String对象.getClass()</code> 来获取 <code>Class</code> 也可以:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token string">&quot;va&quot;</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;exec&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>
        <span class="token string">&quot;va&quot;</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;calc&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以及这里的字符串是可以拆分再拼接的, 下面这种写法也是可以正确执行的:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token operator">+</span><span class="token string">&quot;.lang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;exec&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>
        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.la&quot;</span><span class="token operator">+</span><span class="token string">&quot;ng.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;calc&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token string">&quot;va&quot;</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lan&quot;</span><span class="token operator">+</span><span class="token string">&quot;g.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;exec&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>
        <span class="token string">&quot;va&quot;</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.l&quot;</span><span class="token operator">+</span><span class="token string">&quot;ang.Runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getRuntime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;calc&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,37);function X(Z,nn){const t=c("ExternalLinkIcon"),i=c("Tabs");return r(),k("div",null,[v,n("blockquote",null,[n("p",null,[n("a",m,[a("Java 下载 |甲骨文 --- Java Downloads | Oracle"),s(t)])]),n("p",null,[n("a",g,[a("Archived OpenJDK GA Releases (java.net)"),s(t)])])]),s(i,{id:"81",data:[{id:"Windows"},{id:"Ubuntu/Debian"}],active:0},{title0:p(({value:l,isActive:o})=>[a("Windows")]),title1:p(({value:l,isActive:o})=>[a("Ubuntu/Debian")]),tab0:p(({value:l,isActive:o})=>[b,h,j,f,_,y,q,E,w,x,A]),tab1:p(({value:l,isActive:o})=>[n("blockquote",null,[n("p",null,[n("a",J,[a("OpenJDK: Download and install"),s(t)])]),n("p",null,[a("["),n("a",C,[a("环境搭建] Kali 下多版本JDK 共存 - 2022 年11 月1 日更新 - 知乎 (zhihu.com)"),s(t)])]),D]),M,N,O,R,B,P,S,H]),_:1}),V,n("blockquote",null,[n("p",null,[n("a",T,[a("Maven配置教程_霍英俊-CSDN博客_maven配置"),s(t)])])]),K,n("p",null,[a("在 "),n("a",F,[a("Maven – Download Apache Maven"),s(t)]),a(" 下载")]),I,n("blockquote",null,[n("p",null,[n("a",z,[a("使用公共仓库加速 Maven 构建，提升效率！ (github.com)"),s(t)])])]),$,n("blockquote",null,[n("p",null,[n("a",L,[a("Java 编程 – 2023 开发者生态系统现状信息图 | JetBrains: Developer Tools for Professionals and Teams"),s(t)])]),n("p",null,[n("a",W,[a("Java 8 腰斩！Java 17 暴涨 2300%！-51CTO.COM"),s(t)])])]),U,n("blockquote",null,[n("p",null,[n("a",G,[a("Java 反射详解 - YSOcean - 博客园 (cnblogs.com)"),s(t)])]),Y]),Q])}const tn=u(d,[["render",X],["__file","Java.html.vue"]]),en=JSON.parse('{"path":"/Language/Java/Java.html","title":"Java","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Java 环境配置","slug":"java-环境配置","link":"#java-环境配置","children":[{"level":3,"title":"安装 jdk","slug":"安装-jdk","link":"#安装-jdk","children":[]},{"level":3,"title":"IDEA","slug":"idea","link":"#idea","children":[]},{"level":3,"title":"Maven","slug":"maven","link":"#maven","children":[]}]},{"level":2,"title":"Java生态调查","slug":"java生态调查","link":"#java生态调查","children":[]},{"level":2,"title":"Java 反射","slug":"java-反射","link":"#java-反射","children":[{"level":3,"title":"得到 Class 的三种方式","slug":"得到-class-的三种方式","link":"#得到-class-的三种方式","children":[]}]},{"level":2,"title":"命令执行","slug":"命令执行","link":"#命令执行","children":[]}],"git":{"createdTime":1667831333000,"updatedTime":1728359086000,"contributors":[{"name":"233","email":"ayusummer233@vip.qq.com","commits":7},{"name":"233Official","email":"ayusummer233@qq.com","commits":6},{"name":"233PC","email":"ayusummer233@gmail.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1},{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":1}]},"readingTime":{"minutes":8.18,"words":2454},"filePathRelative":"Language/Java/Java.md","localizedDate":"2022年11月7日","excerpt":"\\n<hr>\\n<ul>\\n<li><a href=\\"#java\\">Java</a>\\n<ul>\\n<li><a href=\\"#java-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\\">Java 环境配置</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85-jdk\\">安装 jdk</a></li>\\n<li><a href=\\"#idea\\">IDEA</a>\\n<ul>\\n<li><a href=\\"#ubuntu-%E5%AE%89%E8%A3%85-idea\\">ubuntu 安装 IDEA</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#maven\\">Maven</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE\\">安装与配置</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#java-%E5%8F%8D%E5%B0%84\\">Java 反射</a>\\n<ul>\\n<li><a href=\\"#%E5%BE%97%E5%88%B0-class-%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F\\">得到 Class 的三种方式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C\\">命令执行</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{tn as comp,en as data};
